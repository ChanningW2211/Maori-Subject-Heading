@page
@model web.TermModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    var term = (Helper.Term)ViewData["term"];
    var records = (List<Helper.Record>)ViewData["records"];
}

<h2>@term.PrefLabel</h2>

@if (term.Tukutuku.Count() > 0)
{
    <h6>Tukutuku</h6>
    <ul>
        @foreach (var label in term.Tukutuku)
        {
            <li>@label</li>
        }
    </ul>
}

@if (!string.IsNullOrEmpty(term.AltLabel))
{
    <h6>English used for</h6>
    <ul>
        <li> @term.AltLabel </li>
        @foreach (var label in term.UsedFor)
        {
            <li>@label</li>
        }
    </ul>
}

@if (!string.IsNullOrEmpty(term.Whakamārama))
{
    <h6>Whakamārama</h6>
    <ul>
        <li> @term.Whakamārama </li>
    </ul>
}

@if (!string.IsNullOrEmpty(term.ScopeNote))
{
    <h6>Scope note</h6>
    <ul>
        <li> @term.ScopeNote</li>
    </ul>
}

@if (records.Count() > 0)
{
    <h6>Bibliography: Title (ISBN) [Links]</h6>
    <ul>
        @foreach (var record in records)
        {
            int i = 0;
            <li>
                @record.Title
                @if (!string.IsNullOrEmpty(record.ISBN))
                {<text> (@record.ISBN) </text>}
                @foreach (var link in record.Link)
                {
                    i++;
                    @:[<a href=@link>Link @i</a>]
                }
            </li>
        }
    </ul>
}

@if (term.BroaderTerm.Count() > 0)
{
    <h6>Tāhuhu/Broader terms [<a asp-page=Result asp-route-key=@web.Helper.broaderResult>More</a>] </h6>
    <ul>
        @foreach (var broaderTerm in term.BroaderTerm)
        {
            <li>
                <a asp-page=Term asp-route-searchString=@broaderTerm>
                    @System.Web.HttpUtility.UrlDecode(System.Text.RegularExpressions.Regex.Match(broaderTerm, "#(.*?)>").Groups[1].Value)
                </a>
            </li>
        }
    </ul>
}

@if (term.NarrowerTerm.Count() > 0)
{
    <h6>Heke/Narrower terms [<a asp-page=Result asp-route-key=@web.Helper.narrowerResult>More</a>] </h6>
    <ul>
        @foreach (var narrowerTerm in term.NarrowerTerm)
        {
            <li>
                <a asp-page=Term asp-route-searchString=@narrowerTerm>
                    @System.Web.HttpUtility.UrlDecode(System.Text.RegularExpressions.Regex.Match(narrowerTerm, "#(.*?)>").Groups[1].Value)
                </a>
            </li>
        }
    </ul>
}

@if (term.RelatedTerm.Count() > 0)
{
    <h6>Kaho/Related terms</h6>
    <ul>
        @foreach (var relatedTerm in term.RelatedTerm)
        {
            <li>
                <a asp-page=Term asp-route-searchString=@relatedTerm>
                    @System.Web.HttpUtility.UrlDecode(System.Text.RegularExpressions.Regex.Match(relatedTerm, "#(.*?)>").Groups[1].Value)
                </a>
            </li>
        }
    </ul>
}


